/**
 * @file toggle.css
 * @description Styles for a reusable toggle button component with a new 'dim' variant.
 */
/* Base */
.toggle {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  font-weight: 500;
  line-height: 1;
  border: 1px solid transparent;
  border-radius: var(--radius);
  cursor: pointer;
  user-select: none;
  transition: background-color 0.15s, color 0.15s, border-color 0.15s;
  height: 2.25rem;
  padding: 0.5rem 0.675rem;
  font-size: 0.875rem;
  gap: calc(var(--spacing) * 1.5);
  background-color: transparent;
  color: var(--foreground);
}

/* Shape */
.toggle-pill {
  border-radius: 9999px;
}

/* Sizes */
.toggle-xs {
  height: 1.75rem;
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  gap: calc(var(--spacing) * 1);
}

.toggle-sm {
  height: 2rem;
  padding: 0.375rem 0.5rem;
  gap: calc(var(--spacing) * 1.25);
}

.toggle-lg {
  height: 2.5rem;
  padding: 0.5rem 0.675rem;
  font-size: 1rem;
  gap: calc(var(--spacing) * 1.75);
}

.toggle-xl {
  height: 2.75rem;
  padding: 0.625rem 0.75rem;
  font-size: 1.125rem;
  gap: calc(var(--spacing) * 2);
}

/* Icon-only */
.toggle.toggle-icon {
  padding: 0;
  gap: 0;
  width: 2.25rem;
  height: 2.25rem;
}

.toggle-icon.toggle-xs { width: 1.75rem; height: 1.75rem; }
.toggle-icon.toggle-sm { width: 2rem; height: 2rem; }
.toggle-icon.toggle-lg { width: 2.5rem; height: 2.5rem; }
.toggle-icon.toggle-xl { width: 2.75rem; height: 2.75rem; }

/* Icon sizing */
.toggle i,
.toggle svg {
  flex-shrink: 0;
  width: 1rem;
  height: 1rem;
}

.toggle-xs i, 
.toggle-xs svg,
.toggle-sm i,
.toggle-sm svg {
  width: 0.875rem;
  height: 0.875rem;
}

.toggle-lg i,
.toggle-lg svg {
  width: 1.125rem;
  height: 1.125rem;
}

.toggle-xl i,
.toggle-xl svg {
  width: 1.25rem;
  height: 1.25rem;
}

/* Default & Outline Variants */
.toggle:not(.toggle-outline):not(.toggle-dim)[aria-pressed='false']:hover:not(:disabled) {
  background-color: var(--muted);
  color: var(--muted-foreground);
}

.toggle:not(.toggle-outline):not(.toggle-dim)[aria-pressed='true'] {
  background-color: var(--accent);
  color: var(--accent-foreground);
}

.toggle-outline {
  border-color: var(--border);
}

.toggle-outline[aria-pressed='true'],
.toggle-outline[aria-pressed='false']:hover:not(:disabled) {
  background-color: var(--accent);
  color: var(--accent-foreground);
}

.dark .toggle-outline[aria-pressed='true'],
.dark .toggle-outline[aria-pressed='false']:hover:not(:disabled) {
  border-color: var(--ring);
}

/* --- NEW: Dim Variant --- */
.toggle-dim {
  background: none;
  color: var(--muted-foreground);
  border: none;
}

.toggle-dim:hover:not(:disabled) {
  background: none;
  color: var(--foreground);
}

/* The active state for a dim toggle will simply be the hover state */
.toggle-dim[aria-pressed='true'] {
  background: none;
  color: var(--foreground);
}

.dark .toggle-dim {
  color: var(--muted-foreground);
}

.dark .toggle-dim:hover:not(:disabled),
.dark .toggle-dim[aria-pressed='true'] {
  color: var(--foreground);
}

/* Disabled State */
.toggle:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

/* Icon Swapping Logic */
.toggle .icon-inactive,
.toggle .icon-active {
  display: inline-flex;
}

.toggle[aria-pressed='false'] .icon-active,
.toggle[aria-pressed='true'] .icon-inactive {
  display: none;
}

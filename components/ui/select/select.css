/**
 * @file select.css
 * @description Styles for a reusable custom select component.
 */
 .select {
    position: relative;
    width: 100%;
}

.select-trigger {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: 2.25rem;
    padding: 0.25rem 0.75rem;
    font-size: 0.875rem;
    background-color: var(--background);
    border: 1px solid var(--input);
    border-radius: var(--radius);
    cursor: pointer;
    user-select: none;
    transition: background-color 0.1s;
}

.select-value {
    color: var(--foreground);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.select-value-placeholder {
    color: var(--muted-foreground);
}

.select-trigger-icon {
    width: 1rem;
    height: 1rem;
    color: var(--muted-foreground);
    transition: transform 0.2s ease-in-out;
    flex-shrink: 0;
}

.select-content {
    position: fixed; /* Changed to fixed for viewport positioning */
    z-index: 10;
    width: var(--trigger-width); /* Use variable for width */
    background-color: var(--popover);
    color: var(--popover-foreground);
    border: 1px solid var(--input);
    border-radius: var(--radius);
    padding: 0.25rem;
    opacity: 0;
    transform: scale(0.98) translateY(-0.5rem);
    pointer-events: none;
    transition: opacity 0.2s ease, transform 0.2s ease;
    box-shadow: none;
    --offset: 4px; /* Added offset for consistency */
}

.select-group:not(:last-child) {
    margin-bottom: 0.25rem;
}

.select-label {
    padding: 0.5rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--muted-foreground);
}

.select-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    border-radius: calc(var(--radius) - 2px);
    cursor: pointer;
    user-select: none;
    outline: none;
    transition: background-color 0.1s;
}

.select-item > i,
.select-item > svg {
    width: 1rem;
    height: 1rem;
    opacity: 0;
    color: var(--muted-foreground);
}

.select-content-open {
    opacity: 1;
    transform: scale(1) translateY(0);
    pointer-events: auto;
}

.select-trigger[aria-expanded="true"] .select-trigger-icon {
    transform: rotate(180deg);
}

.select-trigger:hover:not(:disabled) {
    background-color: var(--accent);
}

.select.is-open:not(.has-hovered) .select-item-selected {
    background-color: var(--accent);
    color: var(--accent-foreground);
}

.select.has-hovered .select-item:hover {
    background-color: var(--accent);
    color: var(--accent-foreground);
}

.select-item-selected > i,
.select-item-selected > svg {
    opacity: 1;
}

.dark .select-trigger {
    background-color: oklch(from var(--input) l c h / 0.3);
}

.dark .select-trigger:hover:not(:disabled) {
    background-color: oklch(from var(--input) l c h / 0.5);
}

.select-trigger:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

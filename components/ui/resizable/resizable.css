/**
 * @file resizable.css
 * @description Core styles for a flexbox-based resizable panel layout.
 */

 .resizable-root {
  display: flex;
  width: 100%;
  height: 100%;
  background: var(--background);
  overflow: hidden;
  border: 1px solid var(--border);
  position: relative;
}

.resizable-root.resizable-vertical {
  flex-direction: column;
}

.resizable-panel {
  position: relative;
  overflow: auto;
  outline: none;
  background: inherit;
  min-width: 0;
  min-height: 0;
  flex-grow: 1;
  flex-shrink: 1;
}

/* A nested root should not have its own border */
.resizable-panel > .resizable-root {
  border: none;
}

.resizable-handle {
  flex-shrink: 0;
  position: relative;
  background: transparent;
  border: none;
  padding: 0;
  z-index: 2;
  transition: background-color 0.15s ease-in-out;
}

/* Horizontal Handle */
.resizable-root.resizable-horizontal > .resizable-handle {
  width: 4px;
  cursor: ew-resize;
  margin: 0 -1.5px;
}

.resizable-root.resizable-horizontal > .resizable-handle::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 1px;
  height: 100%;
  background: var(--border);
  transition: background-color 0.15s ease-in-out;
}

/* Vertical Handle */
.resizable-root.resizable-vertical > .resizable-handle {
  height: 4px;
  width: 100%;
  cursor: ns-resize;
  margin: -1.5px 0;
}

.resizable-root.resizable-vertical > .resizable-handle::after {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  height: 1px;
  width: 100%;
  background: var(--border);
  transition: background-color 0.15s ease-in-out;
}

/* Handle States */
.resizable-handle:hover::after,
.resizable-handle-dragging::after,
.resizable-handle:focus-visible::after {
  background: var(--primary);
}

/* Disabled State */
.resizable-root.resizable-disabled .resizable-handle {
  cursor: default;
  pointer-events: none;
}

.resizable-root.resizable-disabled .resizable-handle::after {
  background: var(--muted-foreground);
}
